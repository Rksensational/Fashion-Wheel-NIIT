package com.FashionWheel.model;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.Transaction;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.FashionWheel.Dbconfig.DbConfig;

@Repository("ProductDAO")

@Transactional
public class ProductDAO implements IProductDAO {
	private Transaction trans;
	private Session sess;
	private boolean b = true;
	


	public boolean insertProduct(Product p) {
		try {
			DbConfig db = new DbConfig();
			sess = db.getSess();
			trans = sess.beginTransaction();
			sess.save(p);
			trans.commit();
		} catch (Exception exp) {
			exp.printStackTrace();
			b = false;
		}
		return b;
	}



	@Override
	public Product getProduct(int Pid) {
		// TODO Auto-generated method stub
		return null;
	}



	@Override
	public List<Product> getProducts() {
		// TODO Auto-generated method stub
		return null;
	}

/*

	@Override
	public boolean updateProduct(Product p) {
		// TODO Auto-generated method stub
		return false;
	}



	@Override
	public boolean deleteProduct(Product p) {
		// TODO Auto-generated method stub
		return false;
	}



	@Override
	public List<Product> listActiveProducts() {
		// TODO Auto-generated method stub
		return null;
	}*/
	 

	/*public List<Product> getProducts() {

		DbConfig db = new DbConfig();
		sess = db.getSess();
		Query<Product> quer = sess.createQuery("FROM Product", Product.class);
		List<Product> al = quer.getResultList();
		return al;
	}

	
	@Override
	public boolean updateProduct(Product p) {
		try {
			DbConfig db = new DbConfig();
			sess = db.getSess();
			trans = sess.beginTransaction();
			sess.update(p);
			trans.commit();
		} catch (Exception exp) {
			exp.printStackTrace();
			trans.rollback();
			b= false;
		}
		return b;
	}

	@Override
	public boolean deleteProduct(Product p) {
		try {

			p.setActive(false);
			return this.updateProduct(p);

		} catch (Exception exp) {
			exp.printStackTrace();
			trans.rollback();
			b = false;
		}
		return b;

	}


	@Override
	public Product getProduct(int Pid) {
		DbConfig db = new DbConfig();
		sess = db.getSess();
		return (Product)sess.get(Product.class, Integer.valueOf(Pid));
	}


	@Override
	public List<Product> listActiveProducts() {
		// TODO Auto-generated method stub
		return null;
	}
*/


}
